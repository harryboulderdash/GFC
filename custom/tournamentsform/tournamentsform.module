

<?php




/**
 * @file
 * This is the main module file.
 */


//$wrapper = $entity->wrapper();
//$wrapper = entity_metadata_wrapper('node', $node);

 /**
 * Implements hook_help().
 */

//print '<pre>';
//var_dump(get_defined_vars());
//print '</pre>';


//CODE TO PLACE FORM IN A BLOCK

function tournamentsform_block_info() {
  $blocks = array();

  $blocks['TournamentFormBlock'] = array(
    'info' => t('Tourney Form Block'), 
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function tournamentsform_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'TournamentFormBlock':
      $block['subject'] = t('Tournaments Form Block');
      $block['content'] = drupal_get_form('tournamentsform_form1');
    break;
  }
  return $block;
}

//END OF CODE TO PLACE FORM IN A BLOCK


function tournamentsform_help($path, $arg) {

  if ($path == 'admin/help#tournamentsform') {
    $output = '<h3>' . t('About') . '</h3>';
    $output .= '<p>' . t('The tournamentsform module is used to define tournaments.') . '</p>';
    return $output;
  }
}

/**
 * Implementation of hook_menu().
 */
function tournamentsform_menu() {
	$items['tournamentsform/form1'] = array(
			'type' => MENU_CALLBACK,
			'access arguments' => array('access content'),
			'page callback' => 'drupal_get_form',
			'page arguments'=>array('tournamentsform_form1'));

	return $items;
}



function tournamentsform_form1($form, &$form_state) {
	$form = array();


	$form['name']=array(
			'#type'=>'textfield',
			'#title'=>t('Enter Tournament Name'),
			'#description'=>t('Tournament Name Goes Here')
	);
	$form['tournament_description']=array(
			'#type'=>'textfield',
			'#title'=>t('Enter Description of Tournament'),
			'#description'=>t('Description goes here')
	);	

	$form['registration_start']=array(
			'#type'=>'date',
			'#title'=>t('Registration Start Time'),
			'#description'=>t('Enter Start Time')
	);
			
	$form['registration_end']=array(
			'#type'=>'date',
			'#title'=>t('Registration Start Time'),
			'#description'=>t('Enter End Time')
	);
	
	$form['tournament_start']=array(
			'#type'=>'date',
			'#title'=>t('tournament Start Time'),
			'#description'=>t('Enter tournament Start Time')
	);
		
	$form['tournament_end']=array(
			'#type'=>'date',
			'#title'=>t('tournament Start Time'),
			'#description'=>t('Enter tournament End Time')
	);

	$form['submit']=array(
			'#type'=>'submit',
			'#value'=>t('CLICK HERE DUDE!')
	);

	return $form;
}
/* 
function tournamentsform_form1_submit($form, &$form_state){
	
	$mynodeidparent = 2; // get the referencing entity node id
	$mynodeidchild = 5; // get the referenced member node id
	
	$node = node_load($mynodeidparent);
	
	$wrapper = entity_metadata_wrapper('node', $node);	
	
	// USE TO ADD ENTITY REFERENCE BY NODE ID
	//	$wrapper->field_reference_team[] = $mynodeidchild; 
	
	// USE TO REMOVE ENTITY REFERENCE BY NODE ID
	foreach($wrapper->field_reference_team as $delta => $field)  {
		if ($field->nid->value() == $mynodeidchild) {
			unset($wrapper->field_reference_team[$delta]);
			$wrapper->save();
			break;
		}
	}

	//Save changes
	$wrapper->save(); //OMG it works!
	//
	
	//generic function indicator message for test only
    drupal_set_message(t('The form has been submitted.'));

}
*/

?>
