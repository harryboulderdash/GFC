<?php

/**
 * @file
 * This is the main module file.
 */

//reference challonge API code

include_once DRUPAL_ROOT . '/includes/challonge.class.php';

/**
 * Ajax menu callback.
 */
function UpdateScoresForm_callback($ajax) {
    if ($ajax) {
        ctools_include('ajax');
        ctools_include('modal');

        $form_state = array(
            'ajax' => TRUE,
            'title' => t('Report Match Scores'),
        );

// Use ctools to generate ajax instructions for the browser to create
// a form in a modal popup.
        $output = ctools_modal_form_wrapper('UpdateScoresForm_form', $form_state);

// If the form has been submitted, there may be additional instructions
// such as dismissing the modal popup.
        if (!empty($form_state['ajax_commands'])) {
            $output = $form_state['ajax_commands'];
        }

// Return the ajax instructions to the browser via ajax_render().
        print ajax_render($output);
        drupal_exit();
    }
    else {
        return drupal_get_form('UpdateScoresForm_form');
    }
}

function UpdateScoresForm_displayBracket($js) {

    //get url section into an array
    $url_components = explode('/', request_uri());
    //find the number of sections
    $count = count($url_components);
    //grab the value of the last section
    $tournamentID =  $url_components[$count-1];


    //pass this in as parameter
    //$tourneyID = '556b81a9b0554';

    //set title
    $title = t('Bracket');

    //generate iframe content for bracket
    $output = t("<iframe src='http://challonge.com/") . $tournamentID . t("/module' width='100%' height='300' frameborder='0' scrolling='auto' allowtransparency='true'></iframe>");


    if ($js) {
        ctools_modal_render($title, $output);
    }
    else {
        drupal_set_title($title);
        return $output;
    }
}

/**
 * An example page.
 */
function UpdateScoresForm_page() {


    //define custom style for modal
    //make dynamic depending on size of bracket, i.e. number of matches
    $custom_style = array(
        'view-bracket-modal-dialog-style' => array(
            'modalSize' => array(
                'type' => 'fixed',
                'width' => 800,
                'height' => 500,
            ),
            'animation' => 'fadeIn',
        ),
    );
    drupal_add_js($custom_style, 'setting');


// Load the modal library and add the modal javascript.
    ctools_include('modal');
    ctools_modal_add_js();


    return _UpdateScoresForm_make_viewbracket_link('View Bracket') . '   ' . _UpdateScoresForm_make_link('Update Scores');
}

function UpdateScoresForm_menu() {

    $items['UpdateScoresForm/form'] = array(
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
        'page callback' => 'drupal_get_form',
        'page arguments'=>array('UpdateScoresForm_form'));

    $items['UpdateScoresForm/page'] = array(
        'page callback' => 'UpdateScoresForm_page',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );

    $items['ViewBracket/%ctools_js'] = array(
        ///'page callback' => 'UpdateScoresForm_callback',
        'page callback' => 'UpdateScoresForm_displayBracket',
        'page arguments' => array(1),
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    $items['UpdateScoresForm/%ctools_js/match'] = array(
        ///'page callback' => 'UpdateScoresForm_callback',
        'page callback' => 'UpdateScoresForm_callback',
        'page arguments' => array(1),
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );

    return $items;
}

/**
 * Helper function to make a link.
 */
function _UpdateScoresForm_make_link($link_text = '') {

    $parameters = drupal_get_query_parameters();
    if(isset($parameters['tid']))
    {
        $tournamentID = $parameters['tid'];
    }
    if(isset($parameters['mid']))
    {
        $matchID = $parameters['mid'];
    }

    // Set a default value if no text in supplied.
    if (empty($link_text)) {
        $link_text = 'Report Match Results';
    }

    return '

' . l($link_text, 'UpdateScoresForm/nojs/match', array('attributes' => array('class' => 'ctools-use-modal'))) . '
';
}

function _UpdateScoresForm_make_viewbracket_link($link_text = '') {

    //get tid value
    $parameters = drupal_get_query_parameters();
    if(isset($parameters['tid']))
    {
        $tournament_id = $parameters['tid'];
    }

// Set a default value if no text in supplied.
    if (empty($link_text)) {
        $link_text = 'View Bracket';
    }

    return '

' . l($link_text, 'ViewBracket/nojs/' . $tournament_id, array('attributes' => array('class' => 'ctools-use-modal ctools-modal-view-bracket-modal-dialog-style'))) . '
';

    /*
     *
     * l(t('Role Exceptions'), "node-edit-display/nojs/exceptions/add/$key/$field_name/$roleId/$content_type", array('html' => TRUE, 'attributes' => array('class' => "ctools-use-modal ctools-modal-node-edit-display-modal-dialog-style"))),
    );
     * */

}

//create a block to wrap this form module
function UpdateScoresForm_block_info() {
    $blocks = array();

    $blocks['UpdateScoresBlock'] = array(
        'info' => t('Update Scores Block'),
        'cache' => DRUPAL_NO_CACHE,
    );
    return $blocks;
}

/**
 * Implements hook_block_view().
 */
function UpdateScoresForm_block_view($delta = '') {
    $block = array();

    switch ($delta) {
        case 'UpdateScoresBlock':
            $block['subject'] = t('Update Scores Form Block');
            $block['content'] = drupal_get_form('UpdateScoresForm_form');
            break;
    }
    return $block;
}
/**
 * Implements hook_help().
 */
function UpdateScoresForm_help($path, $arg) {

    if ($path == 'admin/help#UpdateScoresForm') {
        $output = '<h3>' . t('About') . '</h3>';
        $output .= '<p>' . t('The form module is used to report match scores for the matches open matches you are participating in.') . '</p>';
        return $output;
    }
}
/**
 * Implementation of hook_menu().
 */

function UpdateScoresForm_form($form, &$form_state) {
    $form = array();

//TODO: need the match info and fields to enter score for each team. This will be an overlay window (hopefully).
    $form['results'] = array(
        '#type' => 'fieldset',
        '#title' => t('Report Match Results'),
        '#collapsible' => TRUE,
        '#collapsed' => FALSE,

    );
    $form['results']['score_1']=array(
        '#type'=>'textfield',
        '#title'=>t('Score 1'),
        '#size'=>2,
        '#mexlength'=>3,
        '#required' => TRUE,
        '#description'=>t('Enter Score for Team 1')
    );

    $form['results']['score_2']=array(
        '#type'=>'textfield',
        '#title'=>t('Score 2:'),
        '#size'=>2,
        '#mexlength'=>3,
        '#required' => TRUE,
        '#description'=>t('Enter Score for Team 2')
    );

    $form['results']['submit']=array(
        '#type'=>'submit',
        '#value'=>t('Update Scores')
    );

    return $form;
}

/**
 * Drupal form submit handler.
 */
function UpdateScoresForm_form_submit($form, &$form_state)
{
    try {

        //set tournament_id from url get parameter // TODO: need a better way to keep this state
        $parameters = drupal_get_query_parameters();
        if(isset($parameters['tid']))
        {
            $tournamentID = $parameters['tid'];
        }
        if(isset($parameters['mid']))
        {
            $matchID = $parameters['mid'];
        }

        //todo: set this from context token or parameter
        //$tournamentID = '39';
        //$matchID = '44';
        $score_1 = $form_state['values']['score_1'];
        $score_2 = $form_state['values']['score_2'];


        //call GFC function to update scores
        $results =  UpdateMatchResult($tournamentID, $matchID, $score_1, $score_2);

        // Tell the browser to close the modal.
        // $form_state['ajax_commands'][] = ctools_modal_command_dismiss();

        drupal_set_message(t('Match scores have been saved.' . $results));


    } catch (EntityMetadataWrapperException $exc) {
        watchdog(
            'UpdateScoresForm.module',
            'See ' . __FUNCTION__ . '() <pre>' . $exc->getTraceAsString() . '</pre>',
            NULL, WATCHDOG_ERROR
        );

    }
}

function UpdateScoresForm_form_validate($form, &$form_state) {

    // if ($form_state['values']['name'] = ""){
    //   form_set_error('name', t('Team Name is a required field.'));}

}