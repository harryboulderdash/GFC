<?php

/**
 * @file
 * This is the main module file.
 */

//reference challonge API code

include_once DRUPAL_ROOT . '/includes/challonge.class.php';

/**
 * Ajax menu callback.
 */
function UpdateScoresForm_callback($ajax) {

    if ($ajax) {
//        ctools_include('ajax');
//        ctools_include('modal');

        $form_state = array(
            'ajax' => TRUE,
            'title' => t('Report Match Scores'),
        );

        //get url segments
        $urlArray = explode('/', request_uri());

        //load them in form state to pass into the form modal
        $form_state['build_info']['args'] = $urlArray;

        // Use ctools to generate ajax instructions for the browser to create
        // a form in a modal popup.
        $output = ctools_modal_form_wrapper('UpdateScoresForm_form', $form_state);

        // If the form has been submitted, there may be additional instructions
        // such as dismissing the modal popup.
        if (!empty($form_state['ajax_commands'])) {
            $output = $form_state['ajax_commands'];
        }

        // Return the ajax instructions to the browser via ajax_render().
        print ajax_render($output);
        drupal_exit();
    }
    else {

        return drupal_get_form('UpdateScoresForm_form');

    }
}

function UpdateScoresForm_displayBracket($js) {

    //get url section into an array
    $url_components = explode('/', request_uri());

    //find the number of sections
    $count = count($url_components);

    //grab the value of the last section
    $tournamentID =  $url_components[$count-1];

    //pass this in as parameter
    //$tourneyID = '556b81a9b0554';

    //set title
    $title = t('Bracket');

    //generate iframe content for bracket
    $output = t("<iframe src='http://challonge.com/") . $tournamentID . t("/module' width='100%' height='300' frameborder='0' scrolling='auto' allowtransparency='true'></iframe>");


    if ($js) {
        ctools_modal_render($title, $output);

    }
    else {
        drupal_set_title($title);
        return $output;
    }
}

/**
 * An example page.
 */
function UpdateScoresForm_page() {


    //define custom style for modal
    //make dynamic depending on size of bracket, i.e. number of matches
    $custom_style = array(
        'view-bracket-modal-dialog-style' => array(
            'modalSize' => array(
                'type' => 'fixed',
                'width' => 800,
                'height' => 500,
            ),
            'animation' => 'fadeIn',
        ),
    );
    drupal_add_js($custom_style, 'setting');


// Load the modal library and add the modal javascript.
    ctools_include('modal');
    ctools_modal_add_js();


    return _UpdateScoresForm_make_viewbracket_link() . '   ' . _UpdateScoresForm_make_link();
}

function UpdateScoresForm_menu() {

    $items['UpdateScoresForm/form'] = array(
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
        'page callback' => 'drupal_get_form',
        'page arguments'=>array('UpdateScoresForm_form'));

    $items['UpdateScoresForm/page'] = array(
        'page callback' => 'UpdateScoresForm_page',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );

    $items['ViewBracket/%ctools_js'] = array(
        ///'page callback' => 'UpdateScoresForm_callback',
        'page callback' => 'UpdateScoresForm_displayBracket',
        'page arguments' => array(1),
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    $items['UpdateScoresForm/%ctools_js/match'] = array(
        ///'page callback' => 'UpdateScoresForm_callback',
        'page callback' => 'UpdateScoresForm_callback',
        'page arguments' => array(1),
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );

    return $items;
}


////create a block to wrap this form module
function UpdateScoresForm_block_info() {
    $blocks = array();

    $blocks['UpdateScoresBlock'] = array(
        'info' => t('Update Scores Form Block'),
        'cache' => DRUPAL_NO_CACHE,
    );

    $blocks['OpenChallongeBracket'] = array(
        'info' => t('Open Challonge Bracket'),
        'cache' => DRUPAL_NO_CACHE,
    );

    return $blocks;
}
/**
 * Implements hook_block_view().
 */
function UpdateScoresForm_block_view($delta = '') {

    ctools_include('modal');
    ctools_include('ajax');
    ctools_modal_add_js();
    ctools_add_js('ajax-responder');


    //get TID value from url segments
    $urlArray = explode('/', request_uri());

    //get url segments count to retrieve tid and mid variables with
    $count = count($urlArray);

    /*
     * MODIFY THIS TO look in each segment for prefix 'tid-' or 'mid-'
     * then grab correct value for each variable
     * so as to be independent of segment order
     * because segment order is inflexible and annoying :)
     *
     * */

    foreach($urlArray as $segment) {
        if (substr($segment, 0, 3) == 'tid') {
            $tournamentID = $segment;
            break;
        }
    }

    $matchID = $urlArray[$count-1];

    if (!isset($tournamentID)){
        $tournamentID = $urlArray[$count-2];
    }

    switch ($delta) {

        case 'UpdateScoresBlock':
            return array(
                'subject' => t('Report Match Results'),
                'content' => ctools_modal_text_button(t('Update Scores'),'UpdateScoresForm/nojs/match/' . $tournamentID . '/' . $matchID, t('Update Match Scores.')),
            );

        case 'OpenChallongeBracket':
            return array(
                'subject' => t('View Tourney Bracket'),
                'content' => ctools_modal_text_button(t('View Bracket'),'ViewBracket/nojs/' . $tournamentID,t('View Bracket')),
            );

    }
}
/**
 * Implements hook_help().
 */
function UpdateScoresForm_help($path, $arg) {

    if ($path == 'admin/help#UpdateScoresForm') {
        $output = '<h3>' . t('About') . '</h3>';
        $output .= '<p>' . t('The form module is used to report match scores for the matches open matches you are participating in.') . '</p>';
        return $output;
    }
}
/**
 * Implementation of hook_menu().
 */

function UpdateScoresForm_form($form, &$form_state) {
    $form = array();

    //Best of ___
//    Winner: Select box
//    team name games won:
//    team name 2 games won

    //get url segments count to retrieve tid and mid variables with
    $count = count($form_state['build_info']['args']);

    //grab the value of the last section and translate into NID values
    $matchID =  getMatchNodeIDByChallongeID($form_state['build_info']['args'][$count-1]);
    $tournamentID = getTournamentNodeIDByChallongeID($form_state['build_info']['args'][$count-2]);

    //Load and update match team scores
    $w_match = GetWrapperByEntityID($matchID);
    $team_1_name = $w_match->field_match_team_1->field_team_name->value();
    $team_2_name = $w_match->field_match_team_2->field_team_name->value();



    $form['score_1']=array(
        '#type'=>'textfield',
        //'#title'=> $team_1_name . ' ' . t('score:'),
        '#size'=> 2,
        '#mexlength'=> 3,
        '#required' => TRUE,
        '#attributes' => array('placeholder' => $team_1_name . ' ' . t('score:')),
        //'#description'=> $matchID//t('Enter Score for Team 99')
    );

    $form['results']['score_2']=array(
        '#type'=>'textfield',
        //'#title'=> $team_2_name . ' ' . t('score:'),
        '#size'=> 2,
        '#mexlength'=> 3,
        '#required' => TRUE,
        '#attributes' => array('placeholder' => $team_2_name . ' ' . t('score:')),
        //'#description'=>t('Enter Score for Team 2')
    );

    $form['submit']=array(
        '#type'=>'submit',
        '#value'=>t('Update Scores')
    );

    return $form;
}
/**
 * Drupal form submit handler.
 */
function UpdateScoresForm_form_submit($form, &$form_state)
{
    try {
        //get url segments count to retrieve tid and mid variables with
        $count = count($form_state['build_info']['args']);

        //grab the value of the last section and translate into NID values
        $matchID =  getMatchNodeIDByChallongeID($form_state['build_info']['args'][$count-1]);
        $tournamentID = getTournamentNodeIDByChallongeID($form_state['build_info']['args'][$count-2]);

        //get from score values
        $score_1 = $form_state['values']['score_1'];
        $score_2 = $form_state['values']['score_2'];


        //call GFC function to update scores
        $results =  UpdateMatchResult($tournamentID, $matchID, $score_1, $score_2);


        drupal_set_message(t('Match scores have been saved.' . $results));

        // Tell the browser to close the modal.
        $form_state['ajax_commands'][] = ctools_modal_command_dismiss();


    } catch (EntityMetadataWrapperException $exc) {
        watchdog(
            'UpdateScoresForm.module',
            'See ' . __FUNCTION__ . '() <pre>' . $exc->getTraceAsString() . '</pre>',
            NULL, WATCHDOG_ERROR
        );

    }
}

function UpdateScoresForm_form_validate($form, &$form_state) {

    //make sure both scores are entered and are numeric before updating.
    if(is_numeric($form_state['values']['score_1']) && is_numeric($form_state['values']['score_2']))
    {
       // form_set_error('name', t('nothing to see here folks, all is well'));

    }
    else
    {
        form_set_error('name', t('Scores are required'));
    }
}