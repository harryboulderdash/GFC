
<?php

/**
 * @file
 * This is the main module file.
 */

define('MEMBER_ROLE', '74');


//reference challonge API code
include_once DRUPAL_ROOT . '/includes/challonge.class.php';

/**
 * Implementation of hook_menu().
 */
function manage_teams_form_menu() {
    $items = array();

    $items['teams/manage'] = array( //this creates a URL that will call this form at "teams/manage"
        'title' => 'Join Tournament', //page title
        'description' => 'Create and Add teams to a Tourney.',
        'page callback' => 'drupal_get_form', //this is the function that will be called when the page is accessed.
        'page arguments' => array('manage_teams_form_form'), //put the name of the form here
        'access callback' => TRUE
    );
    return

        $items;
}

function manage_teams_form_help($path, $arg) {

    if ($path == 'admin/help#manage_teams_form') {
        $output = '<h3>' . t('About') . '</h3>';
        $output .= '<p>' . t('The form module is used to enter a new or existing team to a tourney') . '</p>';
        return $output;
    }
}


function manage_teams_form_block_info() {
    $blocks = array();

    $blocks['Manage_Teams_Form_Block'] = array(
        'info' => t('Manage Teams Form Block'),
        'cache' => DRUPAL_NO_CACHE,
    );

    $blocks['Manage_Teams_AddPlayer_Block'] = array(
        'info' => t('Manage Teams Add Player Block'),
        'cache' => DRUPAL_NO_CACHE,
    );
    return $blocks;
}

/**
 * Implements hook_block_view().
 */
function manage_teams_form_block_view($delta = '') {
    $block = array();

    switch ($delta) {
        case 'Manage_Teams_Form_Block':
            $block['subject'] = t('Manage Teams Form Block');
            $block['content'] = drupal_get_form('manage_teams_form_form');
            break;
    }

    switch ($delta) {
        case 'Manage_Teams_AddPlayer_Block':
            $block['subject'] = t('Manage Teams Form Add Player Block');
            $block['content'] = drupal_get_form('manage_teams_form_addPlayer_form');
            break;
    }

    return $block;
}

function manage_teams_form_form($form, &$form_state) {

    $form = array();

    $form['Enter_Team'] = array(
        '#type' => 'fieldset',
        '#title' => t('Add Team to Tourney'),
        '#collapsible' => TRUE,
        '#collapsed' => FALSE,
    );

    $form['Enter_Team']['team_name'] = array(
        '#type' => 'textfield', //you can find a list of available types in the form api
        '#title' => 'Create New Team:',
        '#size' => 20,
        '#maxlength' => 50,
        '#attributes' => array('placeholder' => t('Enter New Team Name')),

        // '#required' => TRUE, //make this field required
    );

    $form['Enter_Team']['existing_team_name'] = array(
        '#type' => 'select',
        '#title' => t('Enter Existing Team:'),
        '#options' => getExistingTeamsByUser($GLOBALS['user']),
        '#empty_option'=> t('--Select Team--'),
    );

    $form['Enter_Team']['invite_players_choice'] = array(
        '#type' => 'checkbox',
        '#title' => t('Invite Players?'),
    );

    $form['Enter_Team']['submit_button'] = array(
        '#type' => 'submit',
        '#value' => t('Next Step'),
        '#states' => array(
            'visible' => array(
                'input[name="invite_players_choice"]' => array('checked' => FALSE),
            ),
        ),
    );


    return $form;
}

function manage_teams_form_addPlayer_form($form, &$form_state)
{
    //TODO: make this dynamic for adding/inviting multiple players
    //Link to code to add number of text boxes for players dynamically
    //https://api.drupal.org/api/examples/ajax_example%21ajax_example_graceful_degradation.inc/function/ajax_example_add_more/7
    //

    $form = array();

    //make this a new form
    //section to add players
    $form['Add_Players'] = array(
        '#type' => 'fieldset',
        '#title' => t('Manage Team Roster'),
        '#collapsible' => TRUE,
        '#collapsed' => FALSE,
        '#states' => array(
            'visible' => array(
                'input[name="invite_players_choice"]' => array('checked' => FALSE),
            ),
        ),
    );

    $form['Add_Players']['Player_Username'] = array(
        '#type' => 'textfield', //you can find a list of available types in the form api
        //'#title' => 'Enter Player Username:',
        '#size' => 20,
        '#maxlength' => 50,
        '#required' => TRUE,
        '#attributes' => array('placeholder' => t('Invite player by: Username, Email or PS Handle.')),
    );

    $form['Add_Players']['Select_Role'] = array(
        '#type' => 'select',
        '#title' => t('Select a Player Role:'),
        '#options' => getPlayerRoles(),
//        '#required' => TRUE,
        '#empty_option'=> t('--Choose a Role--'),
    );

    $form['Add_Players']['submit_button'] = array(
        '#type' => 'submit',
        '#value' => t('Invite Player'),
    );

    return $form;

}

function manage_teams_form_form_validate($form, &$form_state) {

    $teamValue = trim($form_state['values']['team_name']);
    if(empty($teamValue) && (empty($form_state['values']['existing_team_name'])))
    {
        form_set_error('team_name',t('You must either create a team or choose one to enter:'));
    }

}

function manage_teams_form_form_submit($form, &$form_state) {
//    dpm($form_state);

    try {
        //set tournament_id from url get parameter // TODO: need a better way to keep this state
//        $parameters = drupal_get_query_parameters();
//        if (isset($parameters['tid'])) {
//            $tournament_id = $parameters['tid'];

        $form_state['build_info']['args'] = explode('/', request_uri());

        //get url segments count to retrieve tid and mid variables with
        $count = count($form_state['build_info']['args']);

        //grab the value of the last section and translate into NID values

        //set variable to tid value
        $tournamentID = $form_state['build_info']['args'][$count-1];

        if(strlen($tournamentID) > 12){ //insure the tid is the right element based on length

            //translate tid into NID
            $tournament_id =  getTournamentNodeIDByChallongeID($tournamentID);
        }
        else{
            //TODO: message that TID is missing
            drupal_set_message('Tournament is not specified.');
            return;
        }

        if(!empty($form_state['values']['team_name'])) {
            //use new team if provided
            $teamName = $form_state['values']['team_name'];
            $createTeam = TRUE;
        }
        elseif(!empty($form_state['values']['existing_team_name']))
        {
            //otherwise use existing team
            $teamName = $form_state['values']['existing_team_name'];
            $createTeam = FALSE;
        }
        else
        {
            drupal_set_massage('No team is specified.');
        }

        $teamNID = createTeamAndAddToTournament($tournament_id, $teamName, $GLOBALS['user'],$createTeam);

        //add team id to session for next form
        gfc_session("current_team", "$teamNID");

        //$myVar = gfc_session("current_team");

    }
        //exception handler
    catch (Exception $e) {
        _watchdog_log($e->getMessage());
    }


}

function manage_teams_form_addPlayer_form_validate($form, &$form_state) {

    $playerValue = trim($form_state['values']['Player_Username']);

    if(empty($playerValue)){

        form_set_error('team_name',t('player info is required.'));

    }
    /* $roleValue = trim($form_state['values']['Select_Role']);

     form_set_error('team_name',t($playerValue . $roleValue));
     return;*/


    /*if(empty($teamValue) && (empty($form_state['values']['Select_Role'])))
    {
        form_set_error('team_name',t('you must enter player info and select a role'));
    }*/

}

function manage_teams_form_addPlayer_form_submit($form, &$form_state){

    try {
        //get session value for the team being worked with on last form
        $teamID = gfc_session("current_team");

        $form_state['build_info']['args'] = explode('/', request_uri());

        //get url segments count to retrieve tid and mid variables with
        $count = count($form_state['build_info']['args']);

        //set variable to tid value
        $tournamentID = $form_state['build_info']['args'][$count - 1];

        if (strlen($tournamentID) > 12) { //insure the tid is the right element based on length

            //translate tid into NID
            $tournament_id = getTournamentNodeIDByChallongeID($tournamentID);
        } else {
            //message that tournament is missing
            drupal_set_message('Tournament is not specified.');
            return;
        }

        //use this instead of UID, since it's a different person
        $playerUsername = trim($form_state['values']['Player_Username']);
        $roleID = trim($form_state['values']['Select_Role']);

        //default role to 'Member'
        if(!$roleID){
            $roleID = MEMBER_ROLE; //member taxon id

        }

        //TODO DEBUG ONLY
        //drupal_set_message('player Username : ' . $playerUsername . '  ' .  $roleID);
        //return;

        //find user if they exist
        $playerUID = LookupPlayerByAttribute($playerUsername);


        //if player not found stop and provide warning
        if (!$playerUID) {
            //TODO: message that TID is missing
            drupal_set_message('This player not yet registered with GFC, would you like to invite them?');
            return;
        }

        //set invite accepted to 0 until later when player confirms
        $inviteAccepted = 0;

        $result = AddPlayerToTeam($teamID, $playerUID, $roleID, $inviteAccepted);

        //display success message
        drupal_set_message(t($playerUsername . ' Added to Roster'));

    }

//exception handler
    catch (Exception $e) {
        _watchdog_log($e->getMessage());
    }


}